// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id          String    @id @default(cuid())
  name        String
  creatorId   String    // ID du cr√©ateur de la room
  maxSpeakers Int       @default(5)
  users       User[]    @relation("RoomUsers")
  speakers    Speaker[]
  waitlist    Waitlist[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model User {
  id        String    @id @default(cuid())
  name      String
  avatarUrl String?
  rooms     Room[]    @relation("RoomUsers")
  speakers  Speaker[]
  waitlist  Waitlist[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Speaker {
  id        String   @id @default(cuid())
  position  Int      // Position du speaker (1-5)
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  isMuted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([roomId, position])
  @@unique([roomId, userId])
}

model Waitlist {
  id          String   @id @default(cuid())
  position    Int      // Position dans la liste d'attente
  room        Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  requestedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([roomId, position])
  @@unique([roomId, userId])
}